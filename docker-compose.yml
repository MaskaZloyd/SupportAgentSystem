services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092" # Для внутреннего общения между контейнерами
      - "29092:29092" # Для доступа с хоста
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # Для confluent образов
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redis_db:
    image: redis:6-alpine
    container_name: redis_db
    ports:
      - "6379:6379"

  orchestrator_service:
    build: ./orchestrator_service
    container_name: orchestrator_service
    ports:
      - "8000:80" # FastAPI на localhost:8000
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CELERY_BROKER_URL=redis://redis_db:6379/0
      - CELERY_RESULT_BACKEND=redis://redis_db:6379/0
    depends_on:
      - kafka
      - redis_db
    volumes:
      - ./orchestrator_service/app:/usr/src/app/app

  orchestrator_worker:
    build: ./orchestrator_service
    container_name: orchestrator_worker
    command: celery -A app.tasks.celery_app worker -l info
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CELERY_BROKER_URL=redis://redis_db:6379/0
      - CELERY_RESULT_BACKEND=redis://redis_db:6379/0
    depends_on:
      - kafka
      - redis_db
      - orchestrator_service
    volumes:
      - ./orchestrator_service/app:/usr/src/app/app
